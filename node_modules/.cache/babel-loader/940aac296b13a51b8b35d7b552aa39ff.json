{"ast":null,"code":"var _jsxFileName = \"/Users/damonwalker/Documents/ReactApp/firebase-react-scheduler/FirebaseReactScheduler/src/store/favorite-context.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FavoritesContext = /*#__PURE__*/createContext({\n  favorites: [],\n  totalFavorites: 0,\n  addFavorite: favoriteMeetup => {},\n  removeFavorite: meetupId => {},\n  itemIsFavorite: meetupId => {}\n});\nexport function FavoritesContextProvider(props) {\n  _s();\n\n  const [userFavorites, setUserFavorites] = useState([]);\n\n  function addFavoritHandler(favoriteMeetup) {\n    setUserFavorites(prevUserFavorites => {\n      return prevUserFavorites.concat(favoriteMeetup);\n    });\n  }\n\n  function removeFavoriteHandler(meetupId) {\n    setUserFavorites(prevUserFavorites => {\n      return prevUserFavorites.filter(meetup => meetup.id !== meetupId);\n    });\n  }\n\n  function itemIsFavoriteHandler(meetupId) {\n    return userFavorites.some(meetup => meetup.id === meetupId);\n  }\n\n  const context = {\n    favorites: userFavorites,\n    totalFavorites: userFavorites.length,\n    addFavorite: addFavoritHandler,\n    removeFavorite: removeFavoriteHandler,\n    itemIsFavorite: itemIsFavoriteHandler\n  };\n  return /*#__PURE__*/_jsxDEV(FavoritesContext.Provider, {\n    value: context,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 12\n  }, this);\n}\n\n_s(FavoritesContextProvider, \"UlopS2AxBLjN23/y+OKS+T5dH2M=\");\n\n_c = FavoritesContextProvider;\nexport default FavoritesContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"FavoritesContextProvider\");","map":{"version":3,"sources":["/Users/damonwalker/Documents/ReactApp/firebase-react-scheduler/FirebaseReactScheduler/src/store/favorite-context.js"],"names":["createContext","useState","FavoritesContext","favorites","totalFavorites","addFavorite","favoriteMeetup","removeFavorite","meetupId","itemIsFavorite","FavoritesContextProvider","props","userFavorites","setUserFavorites","addFavoritHandler","prevUserFavorites","concat","removeFavoriteHandler","filter","meetup","id","itemIsFavoriteHandler","some","context","length","children"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,QAAwC,OAAxC;;AAEA,MAAMC,gBAAgB,gBAAGF,aAAa,CAAC;AAEnCG,EAAAA,SAAS,EAAE,EAFwB;AAGnCC,EAAAA,cAAc,EAAE,CAHmB;AAInCC,EAAAA,WAAW,EAAGC,cAAD,IAAoB,CAAE,CAJA;AAKnCC,EAAAA,cAAc,EAAGC,QAAD,IAAc,CAAE,CALG;AAMnCC,EAAAA,cAAc,EAAGD,QAAD,IAAc,CAAE;AANG,CAAD,CAAtC;AASA,OAAO,SAASE,wBAAT,CAAkCC,KAAlC,EAAyC;AAAA;;AAC5C,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCZ,QAAQ,CAAC,EAAD,CAAlD;;AAEA,WAASa,iBAAT,CAA2BR,cAA3B,EAA2C;AACvCO,IAAAA,gBAAgB,CAAEE,iBAAD,IAAuB;AACpC,aAAOA,iBAAiB,CAACC,MAAlB,CAAyBV,cAAzB,CAAP;AACH,KAFe,CAAhB;AAGH;;AAED,WAASW,qBAAT,CAA+BT,QAA/B,EAAyC;AACrCK,IAAAA,gBAAgB,CAACE,iBAAiB,IAAI;AAClC,aAAOA,iBAAiB,CAACG,MAAlB,CAAyBC,MAAM,IAAIA,MAAM,CAACC,EAAP,KAAcZ,QAAjD,CAAP;AACH,KAFe,CAAhB;AAGH;;AAED,WAASa,qBAAT,CAA+Bb,QAA/B,EAAyC;AAErC,WAAOI,aAAa,CAACU,IAAd,CAAmBH,MAAM,IAAIA,MAAM,CAACC,EAAP,KAAcZ,QAA3C,CAAP;AACH;;AAED,QAAMe,OAAO,GAAG;AACZpB,IAAAA,SAAS,EAAES,aADC;AAEZR,IAAAA,cAAc,EAAEQ,aAAa,CAACY,MAFlB;AAGZnB,IAAAA,WAAW,EAAES,iBAHD;AAIZP,IAAAA,cAAc,EAAEU,qBAJJ;AAKZR,IAAAA,cAAc,EAAEY;AALJ,GAAhB;AAQA,sBAAO,QAAC,gBAAD,CAAkB,QAAlB;AAA2B,IAAA,KAAK,EAAEE,OAAlC;AAAA,cACFZ,KAAK,CAACc;AADJ;AAAA;AAAA;AAAA;AAAA,UAAP;AAIH;;GAhCef,wB;;KAAAA,wB;AAkChB,eAAeR,gBAAf","sourcesContent":["import { createContext, useState } from 'react';\n\nconst FavoritesContext = createContext({\n\n    favorites: [],\n    totalFavorites: 0, \n    addFavorite: (favoriteMeetup) => {}, \n    removeFavorite: (meetupId) => {}, \n    itemIsFavorite: (meetupId) => {}\n});\n\nexport function FavoritesContextProvider(props) {\n    const [userFavorites, setUserFavorites] = useState([]);\n\n    function addFavoritHandler(favoriteMeetup) {\n        setUserFavorites((prevUserFavorites) => {\n            return prevUserFavorites.concat(favoriteMeetup);\n        });\n    }\n\n    function removeFavoriteHandler(meetupId) {\n        setUserFavorites(prevUserFavorites => {\n            return prevUserFavorites.filter(meetup => meetup.id !== meetupId);\n        });\n    }\n\n    function itemIsFavoriteHandler(meetupId) { \n\n        return userFavorites.some(meetup => meetup.id === meetupId);\n    }\n\n    const context = {\n        favorites: userFavorites,\n        totalFavorites: userFavorites.length,\n        addFavorite: addFavoritHandler, \n        removeFavorite: removeFavoriteHandler, \n        itemIsFavorite: itemIsFavoriteHandler\n    };\n\n    return <FavoritesContext.Provider value={context}>\n        {props.children}\n\n    </FavoritesContext.Provider>\n}\n\nexport default FavoritesContext;"]},"metadata":{},"sourceType":"module"}