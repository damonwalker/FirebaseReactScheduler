{"ast":null,"code":"var _jsxFileName = \"/Users/damonwalker/Documents/ReactApp/firebase-react-scheduler/FirebaseReactScheduler/src/components/meetups/UpdateMeetupForm.js\",\n    _s = $RefreshSig$();\n\nimport { useRef } from 'react'; // I believe this is the problem \n//I may need to return the history and the props\n\nimport Card from '../ui/Card';\nimport classes from './NewMeetupForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UpdateMeetupForm(props) {\n  _s();\n\n  // THIS IS WHAT NEEDS TO CHANGE!!!!!\n  const id = this.props.id;\n  const titleInputRef = useRef(id.props.title);\n  const imageInputRef = useRef();\n  const addressInputRef = useRef();\n  const descriptionInputRef = useRef();\n\n  function submitHandler(event) {\n    // I believe the submit will remain remotely the same\n    event.preventDefault();\n    const enteredTitle = titleInputRef.current.value;\n    const enteredImage = imageInputRef.current.value;\n    const enteredAddress = addressInputRef.current.value;\n    const enteredDescription = descriptionInputRef.current.value;\n    const updateMeetupData = {\n      //this will update the changed values\n      title: enteredTitle,\n      image: enteredImage,\n      address: enteredAddress,\n      description: enteredDescription\n    };\n    props.onUpdateMeetup(updateMeetupData);\n  } //once all the data above is corrected I believe that this information will not need to change\n\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.form,\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \"Meetup Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          required: true,\n          id: \"title\",\n          ref: titleInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"image\",\n          children: \"Meetup Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"url\",\n          required: true,\n          id: \"image\",\n          ref: imageInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"address\",\n          children: \"Meetup Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          required: true,\n          id: \"address\",\n          ref: addressInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"Description\",\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"description\",\n          required: true,\n          rows: \"5\",\n          ref: descriptionInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Update Meetup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UpdateMeetupForm, \"rnfbxkM5ubxegaVnK79k9LUTStI=\");\n\n_c = UpdateMeetupForm;\nexport default UpdateMeetupForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateMeetupForm\");","map":{"version":3,"sources":["/Users/damonwalker/Documents/ReactApp/firebase-react-scheduler/FirebaseReactScheduler/src/components/meetups/UpdateMeetupForm.js"],"names":["useRef","Card","classes","UpdateMeetupForm","props","id","titleInputRef","title","imageInputRef","addressInputRef","descriptionInputRef","submitHandler","event","preventDefault","enteredTitle","current","value","enteredImage","enteredAddress","enteredDescription","updateMeetupData","image","address","description","onUpdateMeetup","form","control","actions"],"mappings":"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","sourcesContent":["import { useRef } from 'react';  // I believe this is the problem \n                                //I may need to return the history and the props\n\nimport Card from '../ui/Card';\nimport classes from './NewMeetupForm.module.css';\n\nfunction UpdateMeetupForm(props) { // THIS IS WHAT NEEDS TO CHANGE!!!!!\n    const id = this.props.id;\n    const titleInputRef = useRef(id.props.title);\n    const imageInputRef = useRef();\n    const addressInputRef = useRef();\n    const descriptionInputRef = useRef();\n\n    \n    \n    function submitHandler(event) { // I believe the submit will remain remotely the same\n        event.preventDefault();\n\n        const enteredTitle = titleInputRef.current.value;\n        const enteredImage = imageInputRef.current.value;\n        const enteredAddress = addressInputRef.current.value;\n        const enteredDescription = descriptionInputRef.current.value;\n\n        const updateMeetupData = { //this will update the changed values\n            title: enteredTitle,\n            image: enteredImage,\n            address: enteredAddress,\n            description: enteredDescription, \n        };\n\n        props.onUpdateMeetup(updateMeetupData);\n\n    }\n    //once all the data above is corrected I believe that this information will not need to change\n    return(\n        <Card>\n            <form className={classes.form} onSubmit={submitHandler}>\n                <div className={classes.control}>\n                    <label htmlFor='title'>Meetup Title</label>\n                    <input type='text' required id='title' ref={titleInputRef}/>\n                </div>\n                <div className={classes.control}>\n                    <label htmlFor='image'>Meetup Image</label>\n                    <input type='url' required id='image' ref={imageInputRef}/>\n                </div>\n                <div className={classes.control}>\n                    <label htmlFor='address'>Meetup Address</label>\n                    <input type='text' required id='address' ref={addressInputRef}/>\n                </div>\n                <div className={classes.control}>\n                    <label htmlFor='Description'>Description</label>\n                    <textarea id='description' required rows='5' ref={descriptionInputRef}/>\n                </div>\n                <div className={classes.actions}>\n                    <button>Update Meetup</button> \n                </div>\n\n            </form>\n\n\n        </Card>\n\n\n\n    );\n\n}\n\nexport default UpdateMeetupForm;"]},"metadata":{},"sourceType":"module"}