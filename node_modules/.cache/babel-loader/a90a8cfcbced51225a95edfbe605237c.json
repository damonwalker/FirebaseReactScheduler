{"ast":null,"code":"var _jsxFileName = \"/Users/damonwalker/Documents/ReactApp/firebase-react-scheduler/FirebaseReactScheduler/src/components/meetups/UpdateMeetupForm.js\",\n    _s = $RefreshSig$();\n\nimport { useRef } from 'react'; // I believe this is the problem \n//I may need to return the history and the props\n\nimport { useContext } from 'react'; //import {useHistory} from 'react-router-dom' \n\nimport Card from '../ui/Card';\nimport classes from './NewMeetupForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UpdateMeetupForm(props) {\n  _s();\n\n  // THIS IS WHAT NEEDS TO CHANGE!!!!!\n  //const history = useHistory();\n  const updateCtx = useContext(UpdateContext);\n  const itemIsFavorite = updateCtx.itemIsFavorite(props.id);\n\n  function updateStatusHandler() {\n    if (itemIsFavorite) {\n      updateCtx.removeFavorite(props.id);\n    } else {\n      updateCtx.addFavorite({\n        id: props.id,\n        title: props.title,\n        description: props.description,\n        image: props.image,\n        address: props.address\n      });\n    }\n  } //const titleInputRef = useRef(props.title);\n  //const imageInputRef = useRef();\n  //const addressInputRef = useRef();\n  //const descriptionInputRef = useRef();\n\n\n  function submitHandler(event) {\n    // I believe the submit will remain remotely the same\n    event.preventDefault();\n    const enteredTitle = titleInputRef.current.value;\n    const enteredImage = imageInputRef.current.value;\n    const enteredAddress = addressInputRef.current.value;\n    const enteredDescription = descriptionInputRef.current.value;\n    const updateMeetupData = {\n      //this will update the changed values\n      title: enteredTitle,\n      image: enteredImage,\n      address: enteredAddress,\n      description: enteredDescription\n    };\n    props.onUpdateMeetup(updateMeetupData);\n  } //once all the data above is corrected I believe that this information will not need to change\n\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.form,\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \"Meetup Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          required: true,\n          id: \"title\",\n          ref: props.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: props.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"image\",\n          children: \"Meetup Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"url\",\n          required: true,\n          id: \"image\",\n          ref: imageInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"address\",\n          children: \"Meetup Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          required: true,\n          id: \"address\",\n          ref: addressInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"Description\",\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"description\",\n          required: true,\n          rows: \"5\",\n          ref: descriptionInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Update Meetup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UpdateMeetupForm, \"PocbLI2Tz0VKw2IYDpu8rE8Dw9Q=\");\n\n_c = UpdateMeetupForm;\nexport default UpdateMeetupForm;\n\n/*#__PURE__*/\n_jsxDEV(\"li\", {\n  className: classes.item,\n  children: /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.image,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: props.image,\n        alt: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.content,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"address\", {\n        children: props.address\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: props.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleFavoriteStatusHandler,\n        children: itemIsFavorite ? 'Remove from Favorites' : 'To Favorites'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          window.location.href = \"update\";\n        },\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: deleteMeetupHandler,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 13\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 91,\n  columnNumber: 1\n}, this);\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateMeetupForm\");","map":{"version":3,"sources":["/Users/damonwalker/Documents/ReactApp/firebase-react-scheduler/FirebaseReactScheduler/src/components/meetups/UpdateMeetupForm.js"],"names":["useRef","useContext","Card","classes","UpdateMeetupForm","props","updateCtx","UpdateContext","itemIsFavorite","id","updateStatusHandler","removeFavorite","addFavorite","title","description","image","address","submitHandler","event","preventDefault","enteredTitle","titleInputRef","current","value","enteredImage","imageInputRef","enteredAddress","addressInputRef","enteredDescription","descriptionInputRef","updateMeetupData","onUpdateMeetup","form","control","actions","item","content","toggleFavoriteStatusHandler","window","location","href","deleteMeetupHandler"],"mappings":"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","sourcesContent":["import { useRef } from 'react';  // I believe this is the problem \n                                //I may need to return the history and the props\nimport { useContext } from 'react';\n//import {useHistory} from 'react-router-dom' \nimport Card from '../ui/Card';\nimport classes from './NewMeetupForm.module.css';\n\nfunction UpdateMeetupForm(props) { // THIS IS WHAT NEEDS TO CHANGE!!!!!\n    //const history = useHistory();\n\n    const updateCtx = useContext(UpdateContext);\n\n    const itemIsFavorite = updateCtx.itemIsFavorite(props.id);\n\n    function updateStatusHandler() {\n        if (itemIsFavorite) {\n            updateCtx.removeFavorite(props.id);\n        } else {\n            updateCtx.addFavorite({\n                id: props.id,\n                title: props.title,\n                description: props.description,\n                image: props.image,\n                address: props.address,\n            });\n        }\n    }\n    //const titleInputRef = useRef(props.title);\n    //const imageInputRef = useRef();\n    //const addressInputRef = useRef();\n    //const descriptionInputRef = useRef();\n\n    \n    \n    function submitHandler(event) { // I believe the submit will remain remotely the same\n        event.preventDefault();\n\n        const enteredTitle = titleInputRef.current.value;\n        const enteredImage = imageInputRef.current.value;\n        const enteredAddress = addressInputRef.current.value;\n        const enteredDescription = descriptionInputRef.current.value;\n\n        const updateMeetupData = { //this will update the changed values\n            title: enteredTitle,\n            image: enteredImage,\n            address: enteredAddress,\n            description: enteredDescription, \n        };\n\n        props.onUpdateMeetup(updateMeetupData);\n\n    }\n    //once all the data above is corrected I believe that this information will not need to change\n    return(\n        <Card>\n            <form className={classes.form} onSubmit={submitHandler}>\n                <div className={classes.control}>\n                    <label htmlFor='title'>Meetup Title</label>\n                    <input type='text' required id='title' ref={props.title}/>\n                    <p>{props.title}</p>\n                </div>\n                <div className={classes.control}>\n                    <label htmlFor='image'>Meetup Image</label>\n                    <input type='url' required id='image' ref={imageInputRef}/>\n                </div>\n                <div className={classes.control}>\n                    <label htmlFor='address'>Meetup Address</label>\n                    <input type='text' required id='address' ref={addressInputRef}/>\n                </div>\n                <div className={classes.control}>\n                    <label htmlFor='Description'>Description</label>\n                    <textarea id='description' required rows='5' ref={descriptionInputRef}/>\n                </div>\n                <div className={classes.actions}>\n                    <button>Update Meetup</button> \n                </div>\n\n            </form>\n\n\n        </Card>\n\n\n\n    );\n\n}\n\nexport default UpdateMeetupForm;\n\n<li className={classes.item}>\n            <Card>\n                <div className={classes.image}>\n                    <img src={props.image} alt={props.title} />\n                </div>\n                <div className={classes.content}>\n                    <h3>{props.title}</h3>\n                    <address>{props.address}</address>\n                    <p>{props.description}</p>\n                </div>\n                <div className={classes.actions}>\n                    <button onClick={toggleFavoriteStatusHandler}>\n                        {itemIsFavorite ? 'Remove from Favorites' : 'To Favorites'}\n                    </button>\n                    <button onClick={()=>{window.location.href =\"update\"}}>\n                        Update\n                    </button>\n                    <button onClick={deleteMeetupHandler}>\n                        Delete\n                    </button>\n                </div>\n            </Card>\n        </li>"]},"metadata":{},"sourceType":"module"}